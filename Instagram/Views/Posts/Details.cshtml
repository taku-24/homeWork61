@model Instagram.Models.Post

<h2 class="text-center mb-4">–ü—É–±–ª–∏–∫–∞—Ü–∏—è</h2>

<div class="d-flex justify-content-center">
    <div class="card post-card shadow-sm">
        <img src="@Model.ImagePath" alt="Post image" class="post-img" />

        <div class="card-body">
            <p><b>@Model.User?.UserName</b></p>
            <p>@Model.Description</p>
            <p><small>–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: @Model.CreatedAt.ToLocalTime()</small></p>

            <form id="likeForm-@Model.Id">
                @Html.AntiForgeryToken()
                <button type="button" id="likeBtn-@Model.Id"
                        class="btn btn-outline-danger"
                        onclick="toggleLike(@Model.Id)">
                    –õ–∞–π–∫
                </button>
                <span id="likeCount-@Model.Id">@Model.LikesCount</span>
            </form>

            <p class="mt-2">üí¨ @Model.CommentsCount</p>

            <h5>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</h5>
            @if (Model.Comments != null && Model.Comments.Any())
            {
                <ul>
                    @foreach (var c in Model.Comments.OrderByDescending(c => c.CreatedAt))
                    {
                        <li><b>@c.User?.UserName:</b> @c.Content</li>
                    }
                </ul>
            }
            else
            {
                <p class="text-muted">–ü–æ–∫–∞ –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.</p>
            }

            <form asp-controller="Comments" asp-action="Add" method="post" class="mt-3">
                @Html.AntiForgeryToken()
                <input type="hidden" name="postId" value="@Model.Id" />
                <textarea name="content" class="form-control" placeholder="–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"></textarea>
                <button type="submit" class="btn btn-primary mt-2">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function getToken() {
            return document.querySelector('input[name="__RequestVerificationToken"]').value;
        }

        function toggleLike(postId) {
            $.ajax({
                url: '/Likes/Toggle',
                type: 'POST',
                data: {
                    postId: postId,
                    __RequestVerificationToken: getToken()
                },
                success: function (res) {
                    if (res.success) {
                        const btn = $('#likeBtn-' + postId);
                        btn.text(res.liked ? '–£–±—Ä–∞—Ç—å –ª–∞–π–∫' : '–õ–∞–π–∫');
                        $('#likeCount-' + postId).text(res.likesCount);
                    } else {
                        alert(res.message);
                    }
                }
            });
        }
    </script>
}
